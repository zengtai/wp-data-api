import Head from "next/head";
// import Image from "next/image";

import { formatData, getLocalData } from "../lib/api";

// import { contentData } from "../data/contentData";

export default function Home({ data }) {
  console.log(`data: `, data);
  // console.log(`contentData: `, contentData.total);

  // let content = useMemo(() => contentData.data[0].content, []);

  function formatRecipe(content) {
    let recipeCover = content.match(
      /<div class="wprm-recipe-image(.*?)src="(.*?)"/
    );
    try {
      let coverUrl = recipeCover[2] || `不存在`;
      console.log(coverUrl);
    } catch (e) {}
    let recipeContent = content
      .replace(/<figure(.*?)>(.*?)<\/figure>/g, `$2`)
      .replace(/<img(.*?)(class=(.*?)\/>)/g, `<img$1class="body-image" />`)

      .replace(/(<\/?a[^>]*>)(?!.*\1)/gi, ``)
      .replace(/<div class="wprm-spacer"(.*?)<\/div>/g, ``)
      .replace(/<div class="wprm-unit-conversion-container(.*?)<\/div>/g, ``)
      // .replace(
      //   /<div class="wprm-container-float-right">((.|\n)*?)(<div class="wprm-recipe-summary)/g,
      //   `$3`
      // )
      .replace(/style\s*?=\s*?(['"])[\s\S]*?\1/g, ``)
      .replace(
        /<div id="wprm-recipe-video((.|\n|\t)*?)(<h3(.*?)Nutrition)/g,
        `$3`
      );
    // .replace(/<span\s*>\s*\|\s*<\/span>/g, ``)
    // .match(/<div id="recipe">(.|\n)*<\/div>/g);

    return recipeContent;
  }

  // content = content.replace(
  //   /(<div\s+id=\\"recipe-video(.*?)(\\n)+)(<h3(.*?)Nutrition)/gm,
  //   `$4`
  // );

  // console.log(JSON.stringify(content));

  // let bodyContent = content.replace(/(.*?)<div id=\\"recipe\\(.*)/g, `$1`);

  let listData = data.posts.data.slice(0, 30);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <main className="mx-auto max-w-xl">
          {listData.map((item) => (
            <article className="m-4 border p-2" key={item.id}>
              <h1
                className="my-5 text-xl font-bold"
                dangerouslySetInnerHTML={{ __html: item.title.rendered }}
              ></h1>
              <div
                className="content my-6"
                dangerouslySetInnerHTML={{
                  __html: formatRecipe(item.content.rendered),
                }}
              />
            </article>
          ))}
        </main>
      </div>
    </>
  );
}

export async function getStaticProps() {
  const categories = await getLocalData(`categories`);
  const posts = await getLocalData(`posts`);
  // const formatedData = await formatData(); // 提取数据
  // const categories = JSON.stringify(fs.readFileSync(`./data/categories.json`));

  return {
    props: {
      data: {
        posts,
        categories,
      },
    },
  };
}
